from UQpy.SampleMethods import RectangularStrata, VoronoiStrata
from UQpy.SampleMethods import RectangularSTS, VoronoiSTS
from UQpy.SampleMethods import RectangularRSS, VoronoiRSS
from UQpy.Distributions import Uniform
from UQpy.Surrogates import Kriging
from UQpy.RunModel import RunModel
import numpy as np
import os
import pytest

marginals = [Uniform(loc=0., scale=2.), Uniform(loc=0., scale=1.)]
strata = RectangularStrata(nstrata=[2, 2])
x = RectangularSTS(dist_object=marginals, strata_object=strata, nsamples_per_stratum=1, random_state=1)
y = RectangularRSS(sample_object=x, nsamples=6, n_add=2, random_state=2)

# dir_path = os.path.dirname(os.path.realpath(__file__))
# filepath = os.path.join(dir_path, 'python_model_function.py')
# rmodel = RunModel(model_script='python_model_function.py', vec='False')
# K = Kriging(reg_model='Linear', corr_model='Exponential', nopt=20, corr_model_params=[1, 1])
# K.fit(samples=x.samples, values=rmodel.qoi_list)
# z = RectangularRSS(sample_object=x, runmodel_object=rmodel, krig_object=K, random_state=2)
# z.run(nsamples=6)

strata_vor = VoronoiStrata(nseeds=4, dimension=2)
x_vor = VoronoiSTS(dist_object=marginals, strata_object=strata_vor, nsamples_per_stratum=1, random_state=1)
y_vor = VoronoiRSS(sample_object=x_vor, nsamples=6, n_add=2, random_state=x_vor.random_state)


def test_rect_rss():
    """
    Test the 6 samples generated by RSS using rectangular stratification
    """
    tmp1 = (np.round(y.samples, 3) == np.array([[0.417, 0.36], [1., 0.151], [0.147, 0.546], [1.186, 0.673],
                                                [0.775, 0.718], [1.71, 0.665]])).all()
    tmp2 = (np.round(y.samplesU01, 3) == np.array([[0.209, 0.36], [0.5, 0.151], [0.073, 0.546], [0.593, 0.673],
                                                   [0.387, 0.718], [0.855, 0.665]])).all()
    assert tmp1 and tmp2


# def test_rect_gerss():
#     """
#     Test the 6 samples generated by RSS using rectangular stratification
#     """
#     tmp1 = (np.round(z.samples, 3) == np.array([[0.417, 0.36], [1., 0.151], [0.147, 0.546], [1.186, 0.673],
#                                                 [0.513, 0.775], [1.718, 0.21]])).all()
#     tmp2 = (np.round(z.samplesU01, 3) == np.array([[0.209, 0.36], [0.5, 0.151], [0.073, 0.546], [0.593, 0.673],
#                                                    [0.256, 0.775], [0.859, 0.21]])).all()
#     assert tmp1 and tmp2


def test_vor_rss():
    """
    Test the 6 samples generated by RSS using voronoi stratification
    """
    tmp1 = (np.round(y_vor.samples, 3) == np.array([[0.504, 0.4], [1.81, 0.891], [1.327, 0.398], [0.264, 0.5],
                                                    [1.192, 0.856], [0.827, 0.622]])).all()
    tmp2 = (np.round(y_vor.samplesU01, 3) == np.array([[0.252, 0.4], [0.905, 0.891], [0.663, 0.398], [0.132, 0.5],
                                                       [0.596, 0.856], [0.413, 0.622]])).all()
    assert tmp1 and tmp2
