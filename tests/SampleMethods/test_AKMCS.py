from UQpy.Surrogates import Kriging
from UQpy.SampleMethods import MCS, AKMCS
from UQpy.RunModel import RunModel
from UQpy.Distributions import Normal
import numpy as np

marginals = [Normal(loc=0., scale=4.), Normal(loc=0., scale=4.)]
x = MCS(dist_object=marginals, nsamples=5, random_state=1)

rmodel = RunModel(model_script='series.py', vec=False)
rmodel.run(samples=x.samples)

K = Kriging(reg_model='Linear', corr_model='Exponential', corr_model_params=np.array([1, 1]), nopt=10)

# OPTIONS: 'U', 'EFF', 'Weighted-U'
lf_name = 'Weighted-U'
# Default values for inbuilt functions
kw = {"u_stop": 2, "weighted_u_stop": 2, "eff_a": 0, "eff_epsilon": 2, "eff_stop": 0.001, 'eif_stop': 0.01}
a = AKMCS(samples=x.samples, runmodel_object=rmodel, krig_object=K, nlearn=10**3, n_add=1,
          learning_function=lf_name, dist_object=marginals, **kw, random_state=2)
a.run(nsamples=7)


def test_weighted_u():
    """
    Test the 6 samples generated by RSS using rectangular stratification
    """
    tmp1 = (np.round(a.samples, 3) == np.array([[6.497, -9.206], [-2.447,  6.979], [-2.113, -3.045], [-4.292,  1.276],
                                                [3.462, -0.997], [-0.016,  1.325], [-0.456, -0.519]])).all()
    assert tmp1
